Week 1:

Tuesday
- We have formed a group, picked Emma as our Scrum Master for our team and discussed meeting times for each week.
- Our meetings are on Thursday and Sunday.
- Bridget is assigned to work on the Background.

Thursday
- Background is done
- Smit had also wrote some Epics for the User Stories.
- Created all the User Stories and made a timeline for each of them on Jira

Week 2:

Tuesday
- Discussed how we should tackle the Technical depth and scale.
- Assigned everyone storyboards to complete for the user stories.
- Discussed technologies and languages to use which were NodeJS + MongoDB for Backend and ReactJS for Frontend.
- Clarified with the tutor about what the presentation, business and data layer diagram should look like.
- Discussed the sprints and the timing for each one (e.g. do we need to exclude week 6 because of flexibility?)

Thursday
- Completed use case diagram
- Completed system architecture diagram
- Setup a basic infrastructure for both frontend and backend

Week 3:

Tuesday
- Discussed novel features to implement (poke, show user is open for tasks)
- Discussed more about the stack setup
- Assigned tasks to accomodate for the novel features update
- Confirmed whether to split or combine storyboards

Thursday
- Discussed whether we had completed the tasks we had assigned each other during Tuesday
- Assigned tasks to piece together the proposal
- Working on the setup for the project (almost done!)

Sunday
- Completed Proposal
- Discussed plans before our next tutorial

Week 4:

Tuesday
- Discussed how to split the work for the first sprint
- Talked about the setup of the backend in more detail, how should logins work etc.
- Group had a chat about the Proposal we submitted with the tutor.

Thursday
- Changed Python Flask to Django due to a lot of built in features for authentication
- A simple get users route was created to test whether user info can be retrieved via HTTP call
- Did some more research and found the Djoser library which can handle authentication tokens so
the frontend can tell who the user is based on the token.

Week 5:

Tuesday
- Demoed our sprint 1
- Went over what we need to fix for sprint 1
- Discussed about the retro

Wednesday
- Assigned tasks to everyone for sprint 2
- Checked up on the bugs from sprint 1 and fixed them
- Researched some UI libraries to make developing frontend easier

Week 6:

Tuesday
- Made a create task endpoint
- Made an endpoint to fetch the currently logged in user's details
- Updated the database models

Wednesday
- Created webpage for creating a task
- Added a small header for all pages
- Fix bug where users can be assigned a task despite not being in the project

Saturday
- Make registrations accept unique emails only
- Fixed 500 errors from GET task routes
- Add functionality to prevent users from accessing the Create Task page for a project they
are not in

Week 7:

Tuesday
- Create the landing page for logout users
- Migrate several landing page components to work with our repo

Thursday
- Recreated the login, signup page on the new UI library
- Recreated the user profile page

Saturday
- Recreated the projects and tasks page
- Recreated the create project and create task page

Week 8

Tuesday
- Fix bug where a task's story points and deadline could not be set and a task could not be created

Thursday
- Changed assigned_to field on the tasks table to be a username instead of a foreign key
- Fix bug where busyness function returns 404 when there are no tasks

Friday
- Make user profile show assigned tasks
- Fix dropdown user profile link not redirecting to user profile page

Saturday
- Fix busyness calculation and task update bug

Week 9

Tuesday
- Discuss what's left before we finish the project and freeze the code
- Delegate the remaining tasks for the week
- Add frontend page for users to add other users to a project

Wednesday
- Complete task nudging novel feature

Thursday
- Discuss the final report and what we need to add on top of our proposal
- Fix some bugs regarding the nudging feature

Sunday
- Finished report
- Finished testing the code
- Wrapped up the code
